// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelGuideApp.Models;

namespace TravelGuideApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210613144413_Initial2")]
    partial class Initial2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15");

            modelBuilder.Entity("TravelGuideApp.Models.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("TouristicSiteID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("genre")
                        .HasColumnType("TEXT");

                    b.Property<double>("prix")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("TouristicSiteID");

                    b.ToTable("Activity");
                });

            modelBuilder.Entity("TravelGuideApp.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("address")
                        .HasColumnType("TEXT");

                    b.Property<string>("city")
                        .HasColumnType("TEXT");

                    b.Property<string>("country")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("TravelGuideApp.Models.Bus", b =>
                {
                    b.Property<int>("NumLine")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("HotelID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Schedule")
                        .HasColumnType("TEXT");

                    b.Property<int>("TouristicSiteID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TransportID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.HasKey("NumLine");

                    b.HasIndex("HotelID");

                    b.HasIndex("TouristicSiteID");

                    b.HasIndex("TransportID");

                    b.ToTable("Bus");
                });

            modelBuilder.Entity("TravelGuideApp.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AddressId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdAddress")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.Property<int>("nbEtoile")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Hotel");
                });

            modelBuilder.Entity("TravelGuideApp.Models.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AddressId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("HotelId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdAddress")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdHotel")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdTouristicSite")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("InHotel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Telephone")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TouristicSiteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.Property<int>("cuisineType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("HotelId");

                    b.HasIndex("TouristicSiteId");

                    b.ToTable("Restaurant");
                });

            modelBuilder.Entity("TravelGuideApp.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int?>("HotelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RestaurantId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("feedback")
                        .HasColumnType("TEXT");

                    b.Property<int>("review")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("touristicSiteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("RestaurantId");

                    b.HasIndex("touristicSiteId");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("TravelGuideApp.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("HotelID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Num")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<string>("TypeRoom")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("HotelID");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("TravelGuideApp.Models.TouristicSite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AddressId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdAddress")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.Property<int>("YearsOfSeniority")
                        .HasColumnType("INTEGER");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("TouristicSite");
                });

            modelBuilder.Entity("TravelGuideApp.Models.Transport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Transport");
                });

            modelBuilder.Entity("TravelGuideApp.Models.Activity", b =>
                {
                    b.HasOne("TravelGuideApp.Models.TouristicSite", "TouristicSite")
                        .WithMany("activities")
                        .HasForeignKey("TouristicSiteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TravelGuideApp.Models.Bus", b =>
                {
                    b.HasOne("TravelGuideApp.Models.Hotel", "Depart")
                        .WithMany("buses")
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelGuideApp.Models.TouristicSite", "Destination")
                        .WithMany()
                        .HasForeignKey("TouristicSiteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelGuideApp.Models.Transport", "Transport")
                        .WithMany("buses")
                        .HasForeignKey("TransportID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TravelGuideApp.Models.Hotel", b =>
                {
                    b.HasOne("TravelGuideApp.Models.Address", "Address")
                        .WithMany("Hotel")
                        .HasForeignKey("AddressId");
                });

            modelBuilder.Entity("TravelGuideApp.Models.Restaurant", b =>
                {
                    b.HasOne("TravelGuideApp.Models.Address", "Address")
                        .WithMany("Restaurant")
                        .HasForeignKey("AddressId");

                    b.HasOne("TravelGuideApp.Models.Hotel", "Hotel")
                        .WithMany("restaurants")
                        .HasForeignKey("HotelId");

                    b.HasOne("TravelGuideApp.Models.TouristicSite", "TouristicSite")
                        .WithMany()
                        .HasForeignKey("TouristicSiteId");
                });

            modelBuilder.Entity("TravelGuideApp.Models.Review", b =>
                {
                    b.HasOne("TravelGuideApp.Models.Hotel", "Hotel")
                        .WithMany("Reviews")
                        .HasForeignKey("HotelId");

                    b.HasOne("TravelGuideApp.Models.Restaurant", "Restaurant")
                        .WithMany("Reviews")
                        .HasForeignKey("RestaurantId");

                    b.HasOne("TravelGuideApp.Models.TouristicSite", "TouristicSite")
                        .WithMany("Reviews")
                        .HasForeignKey("touristicSiteId");
                });

            modelBuilder.Entity("TravelGuideApp.Models.Room", b =>
                {
                    b.HasOne("TravelGuideApp.Models.Hotel", "Hotel")
                        .WithMany("rooms")
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TravelGuideApp.Models.TouristicSite", b =>
                {
                    b.HasOne("TravelGuideApp.Models.Address", "Address")
                        .WithMany("touristicSite")
                        .HasForeignKey("AddressId");
                });
#pragma warning restore 612, 618
        }
    }
}
